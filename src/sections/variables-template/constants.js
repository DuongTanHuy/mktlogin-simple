const getId = () => Math.floor(100000 + Math.random() * 900000);

export const _OPTIONFIELDS = [
  // Layouts,
  {
    id: getId(),
    type: 'GROUP',
    typeGroup: 'layout',
    name: 'Group',
    children: [],
    icon: 'pixelarticons:group',
    config: {
      name: 'Group',
      hideLabel: false,
      showBorder: true,
      labelWidth: 100,
      width: null,
      height: null,
    },
    styleDefault: {
      minHeight: '150px',
    },
    class: 'group-option',
  },
  {
    id: getId(),
    type: 'GROUP',
    name: 'Grid',
    children: [
      {
        id: getId(),
        type: 'GROUP',
        typeGroup: 'layout',
        name: 'Group',
        children: [],
        icon: 'pixelarticons:group',
        isChildGrid: true,
        config: {
          name: 'Group',
          hideLabel: false,
          showBorder: false,
          labelWidth: 100,
          width: null,
          height: null,
        },
        class: 'group-option',
      },
    ],
    icon: 'mdi:grid',
    typeGroup: 'layout',
    config: {
      name: 'Grid',
      hideLabel: false,
      showBorder: true,
      labelWidth: 100,
      width: null,
      height: null,
      gap: 1,
    },
    styleDefault: {
      minHeight: '150px',
    },
    class: 'grid-option',
  },
  {
    id: getId(),
    type: 'ITEM',
    name: 'Divider',
    icon: 'radix-icons:divider-horizontal',
    typeGroup: 'layout',
    config: {
      name: 'Divider',
      hideLabel: true,
      isDashed: false,
      labelWidth: 100,
      width: null,
      height: null,
    },
    styleDefault: {
      minHeight: 'fit-content',
      maxWidth: '100vw',
    },
    class: 'alert-option',
  },
  {
    id: getId(),
    type: 'ITEM',
    name: 'Alert',
    icon: 'ri:alert-line',
    typeGroup: 'layout',
    config: {
      name: 'Alert',
      type: 'success',
      content: '',
      title: 'Title',
      hideLabel: false,
      showBorder: false,
      labelWidth: 100,
      width: null,
      height: null,
    },
    styleDefault: {
      minHeight: 'fit-content',
      maxWidth: '100vw',
    },
    class: 'alert-option',
  },
  {
    id: getId(),
    type: 'ITEM',
    name: 'Inline',
    icon: 'solar:sort-line-duotone',
    typeGroup: 'layout',
    config: {
      name: 'Inline',
      hideLabel: false,
      labelWidth: 100,
      width: null,
      height: null,
    },
    styleDefault: {
      minHeight: 'fit-content',
      maxWidth: '100vw',
    },
    class: 'inline-option',
  },

  // Basic Fields
  {
    id: getId(),
    type: 'ITEM',
    name: 'Input',
    icon: 'iconoir:input-field',
    typeGroup: 'basicField',
    config: {
      name: 'Input',
      hideLabel: false,
      labelWidth: 100,
      width: null,
      height: null,
      variable: null,
      defaultValue: '',
      showTextCount: false,
      rightButton: false,
      isRequired: false,
      acceptType: '.txt',
      placeholder: '',
      maxLength: null,
      minLength: null,
    },
    styleDefault: {
      minHeight: 'fit-content',
      maxWidth: '100vw',
    },
    class: 'input-option',
  },
  {
    id: getId(),
    type: 'ITEM',
    name: 'Input Number',
    icon: 'fluent-emoji-high-contrast:input-numbers',
    typeGroup: 'basicField',
    config: {
      name: 'Input Number',
      showBordered: false,
      clearable: false,
      readOnly: false,
      showButton: false,
      hideLabel: false,
      isRequired: false,
      labelWidth: 100,
      width: null,
      height: null,
      maxLength: 100,
      minLength: 0,
      step: 1,
      variable: null,
      defaultValue: 0,
      placeholder: '',
    },
    styleDefault: {
      minHeight: 'fit-content',
      maxWidth: '100vw',
    },
    class: 'input-number-option',
  },
  {
    id: getId(),
    type: 'ITEM',
    name: 'Select',
    icon: 'fluent-mdl2:dropdown',
    typeGroup: 'basicField',
    config: {
      name: 'Select',
      hideLabel: false,
      isMulti: false,
      isRequired: false,
      labelWidth: 100,
      width: null,
      height: null,
      options: [{ id: 'default-select', checked: true, label: `Label 1`, value: `value 1` }],
      defaultValue: 'value 1',
      placeholder: '',
      variable: null,
    },
    styleDefault: {
      minHeight: 'fit-content',
      maxWidth: '100vw',
    },
    class: 'select-option',
  },
  {
    id: getId(),
    type: 'ITEM',
    name: 'Switch',
    icon: 'mdi:toggle-switch-outline',
    typeGroup: 'basicField',
    config: {
      name: 'Switch',
      hideLabel: false,
      defaultValue: false,
      loading: false,
      labelWidth: 100,
      width: null,
      height: null,
      variable: null,
    },
    styleDefault: {
      minHeight: 'fit-content',
      maxWidth: '100vw',
    },
    class: 'switch-option',
  },
  {
    id: getId(),
    type: 'ITEM',
    name: 'Checkbox',
    icon: 'mdi:checkbox-outline',
    typeGroup: 'basicField',
    config: {
      name: 'Checkbox',
      hideLabel: false,
      labelWidth: 100,
      width: null,
      height: null,
      variable: null,
      options: [
        {
          id: 'default-checkbox',
          checked: true,
          label: `Label 1`,
          value: `value 1`,
        },
      ],
      defaultValue: ['value 1'],
    },
    styleDefault: {
      minHeight: 'fit-content',
      maxWidth: '100vw',
    },
    class: 'checkbox-option',
  },
  {
    id: getId(),
    type: 'ITEM',
    name: 'Radio',
    icon: 'ri:radio-button-line',
    typeGroup: 'basicField',
    config: {
      name: 'Radio',
      hideLabel: false,
      labelWidth: 100,
      width: null,
      height: null,
      variable: null,
      options: [
        {
          id: 'default-radio',
          checked: true,
          label: `Label 1`,
          value: `value 1`,
        },
      ],
      defaultValue: 'value 1',
    },
    styleDefault: {
      minHeight: 'fit-content',
      maxWidth: '100vw',
    },
    class: 'radio-option',
  },
  {
    id: getId(),
    type: 'ITEM',
    name: 'Textarea',
    icon: 'formkit:textarea',
    typeGroup: 'basicField',
    config: {
      name: 'Textarea',
      hideLabel: false,
      showTextCount: false,
      isRequired: false,
      labelWidth: 100,
      width: null,
      height: null,
      variable: null,
      defaultValue: '',
      placeholder: '',
      maxLength: null,
      minLength: null,
    },
    styleDefault: {
      minHeight: 'fit-content',
      maxWidth: '100vw',
    },
    class: 'textarea-option',
  },
  {
    id: getId(),
    type: 'ITEM',
    name: 'Link',
    icon: 'ic:round-link',
    typeGroup: 'basicField',
    config: {
      name: 'Link',
      hideLabel: false,
      openNewTab: false,
      labelWidth: 100,
      width: null,
      height: null,
      variable: null,
      defaultValue: '',
      displayText: '',
    },
    styleDefault: {
      minHeight: 'fit-content',
      maxWidth: '100vw',
    },
    class: 'link-option',
  },
  {
    id: getId(),
    type: 'ITEM',
    name: 'Text',
    icon: 'ion:text',
    typeGroup: 'basicField',
    config: {
      name: 'Text',
      customColor: false,
      strong: false,
      italic: false,
      underline: false,
      delete: false,
      hideLabel: false,
      labelWidth: 100,
      width: null,
      height: null,
      variable: null,
      defaultValue: '',
      color: '',
      depth: '',
    },
    styleDefault: {
      minHeight: 'fit-content',
      maxWidth: '100vw',
    },
    class: 'text-option',
  },

  {
    id: getId(),
    type: 'ITEM',
    name: 'Slider',
    icon: 'clarity:slider-solid',
    typeGroup: 'basicField',
    config: {
      name: 'Slider',
      // reverse: false,
      // vertical: false,
      showMarks: true,
      tooltip: true,
      hideLabel: false,
      labelWidth: 100,
      width: null,
      height: null,
      maxLength: 100,
      minLength: 0,
      step: 10,
      variable: null,
      marks: [],
      defaultValue: 0,
    },
    styleDefault: {
      minHeight: 'fit-content',
      maxWidth: '100vw',
    },
    class: 'slider-option',
  },
  {
    id: getId(),
    type: 'ITEM',
    name: 'Range',
    icon: 'uil:slider-h-range',
    typeGroup: 'basicField',
    config: {
      name: 'Range',
      tooltip: true,
      hideLabel: false,
      marks: true,
      labelWidth: 100,
      width: null,
      height: null,
      rangeMax: 100,
      rangeMin: 0,
      defaultMax: 10,
      defaultMin: 0,
      step: 10,
      variable: null,
    },
    styleDefault: {
      minHeight: 'fit-content',
      maxWidth: '100vw',
    },
    class: 'slider-option',
  },
  {
    id: getId(),
    type: 'ITEM',
    name: 'File',
    icon: 'mdi:file-outline',
    typeGroup: 'advanceField',
    config: {
      name: 'File',
      hideLabel: false,
      labelWidth: 100,
      width: null,
      height: null,
      files: null,
      variable: null,
    },
    styleDefault: {
      minHeight: 'fit-content',
      maxWidth: '100vw',
    },
    class: 'file-option',
  },
  {
    id: getId(),
    type: 'ITEM',
    name: 'Image',
    icon: 'material-symbols:image-outline',
    typeGroup: 'advanceField',
    config: {
      name: 'Image',
      hideLabel: false,
      labelWidth: 100,
      width: null,
      height: null,
      files: null,
      variable: null,
    },
    styleDefault: {
      minHeight: 'fit-content',
      maxWidth: '100vw',
    },
    class: 'image-option',
  },
  {
    id: getId(),
    type: 'ITEM',
    name: 'Html',
    icon: 'hugeicons:html-5',
    typeGroup: 'advanceField',
    config: {
      name: 'HTML',
      hideLabel: false,
      labelWidth: 100,
      width: null,
      height: null,
      defaultValue: '<b style="color: red;">\r\n    This is a HTML5\r\n</b>',
      variable: null,
    },
    styleDefault: {
      minHeight: 'fit-content',
      maxWidth: '100vw',
    },
    class: 'image-option',
  },
];

export const STYLE_ITEM = {
  position: 'relative',
  padding: '10px',
  marginBottom: '10px',
  border: '1px solid lightgray',
  borderRadius: '4px',
  cursor: 'move',
};
